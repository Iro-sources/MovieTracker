// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagment.Api.Data;

#nullable disable

namespace UserManagment.Api.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20230208012729_inital")]
    partial class inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserManagment.Api.Entities.ConfigMovieGenre", b =>
                {
                    b.Property<string>("UserGenreConfigId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MovieGenreId")
                        .HasColumnType("int");

                    b.HasKey("UserGenreConfigId", "MovieGenreId");

                    b.HasIndex("MovieGenreId");

                    b.ToTable("ConfigMovieGenres");

                    b.HasData(
                        new
                        {
                            UserGenreConfigId = "93742ba8-ce40-4964-8ac9-8adc4690a671",
                            MovieGenreId = 1
                        },
                        new
                        {
                            UserGenreConfigId = "93742ba8-ce40-4964-8ac9-8adc4690a671",
                            MovieGenreId = 5
                        },
                        new
                        {
                            UserGenreConfigId = "93742ba8-ce40-4964-8ac9-8adc4690a671",
                            MovieGenreId = 10
                        },
                        new
                        {
                            UserGenreConfigId = "93742ba8-ce40-4964-8ac9-8adc4690a671",
                            MovieGenreId = 2
                        },
                        new
                        {
                            UserGenreConfigId = "72ba74d0-6d21-4dbc-9e95-3a61902a39e3",
                            MovieGenreId = 2
                        },
                        new
                        {
                            UserGenreConfigId = "72ba74d0-6d21-4dbc-9e95-3a61902a39e3",
                            MovieGenreId = 3
                        },
                        new
                        {
                            UserGenreConfigId = "72ba74d0-6d21-4dbc-9e95-3a61902a39e3",
                            MovieGenreId = 11
                        },
                        new
                        {
                            UserGenreConfigId = "72ba74d0-6d21-4dbc-9e95-3a61902a39e3",
                            MovieGenreId = 10
                        },
                        new
                        {
                            UserGenreConfigId = "72ba74d0-6d21-4dbc-9e95-3a61902a39e3",
                            MovieGenreId = 19
                        },
                        new
                        {
                            UserGenreConfigId = "6128e6a7-8012-4180-8ec1-84d52f63b1cc",
                            MovieGenreId = 12
                        },
                        new
                        {
                            UserGenreConfigId = "6128e6a7-8012-4180-8ec1-84d52f63b1cc",
                            MovieGenreId = 3
                        },
                        new
                        {
                            UserGenreConfigId = "6128e6a7-8012-4180-8ec1-84d52f63b1cc",
                            MovieGenreId = 1
                        },
                        new
                        {
                            UserGenreConfigId = "6128e6a7-8012-4180-8ec1-84d52f63b1cc",
                            MovieGenreId = 4
                        },
                        new
                        {
                            UserGenreConfigId = "b547a1af-78f8-4430-a9ee-e6752a533af9",
                            MovieGenreId = 1
                        },
                        new
                        {
                            UserGenreConfigId = "b547a1af-78f8-4430-a9ee-e6752a533af9",
                            MovieGenreId = 2
                        },
                        new
                        {
                            UserGenreConfigId = "b547a1af-78f8-4430-a9ee-e6752a533af9",
                            MovieGenreId = 3
                        },
                        new
                        {
                            UserGenreConfigId = "b547a1af-78f8-4430-a9ee-e6752a533af9",
                            MovieGenreId = 17
                        });
                });

            modelBuilder.Entity("UserManagment.Api.Entities.MovieGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Comedy-romance"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Action-Comedy"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 14,
                            Name = "SuperHero"
                        },
                        new
                        {
                            Id = 15,
                            Name = "History"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Western"
                        });
                });

            modelBuilder.Entity("UserManagment.Api.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426655440000",
                            CreatedAt = new DateTime(2023, 2, 8, 2, 27, 29, 184, DateTimeKind.Local).AddTicks(4319),
                            Email = "philip.eiler@hotmail.com",
                            FirstName = "Philip",
                            LastName = "Fleischer",
                            Password = "philip",
                            Role = "Master"
                        },
                        new
                        {
                            Id = "6a2ddcb0-11fb-4c41-9402-9ad533b1db68",
                            CreatedAt = new DateTime(2023, 2, 8, 2, 27, 29, 184, DateTimeKind.Local).AddTicks(4355),
                            Email = "stine@hotmail.com",
                            FirstName = "Stine",
                            LastName = "Kolsvik",
                            Password = "stine",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = "814e4bb6-52d5-4021-b689-0a152c8ea5b7",
                            CreatedAt = new DateTime(2023, 2, 8, 2, 27, 29, 184, DateTimeKind.Local).AddTicks(4358),
                            Email = "robin@hotmail.com",
                            FirstName = "Robin",
                            LastName = "Dahlman",
                            Password = "robin",
                            Role = "User"
                        },
                        new
                        {
                            Id = "5ae964bd-51c7-4cdb-b0f6-71216f59ee2b",
                            CreatedAt = new DateTime(2023, 2, 8, 2, 27, 29, 184, DateTimeKind.Local).AddTicks(4361),
                            Email = "mohamed@hotmail.com",
                            FirstName = "Mohamed",
                            LastName = "Hassan",
                            Password = "mohamed",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("UserManagment.Api.Entities.UserGenreConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserGenreConfigs");

                    b.HasData(
                        new
                        {
                            Id = "93742ba8-ce40-4964-8ac9-8adc4690a671",
                            UserId = "123e4567-e89b-12d3-a456-426655440000"
                        },
                        new
                        {
                            Id = "72ba74d0-6d21-4dbc-9e95-3a61902a39e3",
                            UserId = "6a2ddcb0-11fb-4c41-9402-9ad533b1db68"
                        },
                        new
                        {
                            Id = "6128e6a7-8012-4180-8ec1-84d52f63b1cc",
                            UserId = "814e4bb6-52d5-4021-b689-0a152c8ea5b7"
                        },
                        new
                        {
                            Id = "b547a1af-78f8-4430-a9ee-e6752a533af9",
                            UserId = "5ae964bd-51c7-4cdb-b0f6-71216f59ee2b"
                        });
                });

            modelBuilder.Entity("UserManagment.Api.Entities.ConfigMovieGenre", b =>
                {
                    b.HasOne("UserManagment.Api.Entities.MovieGenre", "MovieGenre")
                        .WithMany("ConfigMovieGenres")
                        .HasForeignKey("MovieGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagment.Api.Entities.UserGenreConfig", "UserGenreConfig")
                        .WithMany("ConfigMovieGenres")
                        .HasForeignKey("UserGenreConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieGenre");

                    b.Navigation("UserGenreConfig");
                });

            modelBuilder.Entity("UserManagment.Api.Entities.UserGenreConfig", b =>
                {
                    b.HasOne("UserManagment.Api.Entities.User", "User")
                        .WithOne("UserGenreConfig")
                        .HasForeignKey("UserManagment.Api.Entities.UserGenreConfig", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagment.Api.Entities.MovieGenre", b =>
                {
                    b.Navigation("ConfigMovieGenres");
                });

            modelBuilder.Entity("UserManagment.Api.Entities.User", b =>
                {
                    b.Navigation("UserGenreConfig");
                });

            modelBuilder.Entity("UserManagment.Api.Entities.UserGenreConfig", b =>
                {
                    b.Navigation("ConfigMovieGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
